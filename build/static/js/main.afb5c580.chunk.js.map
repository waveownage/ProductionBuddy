{"version":3,"sources":["reportWebVitals.js","components/Home.js","components/Timer.js","components/Filling1050Normal.js","components/GoalMenu.js","components/Timer1050Cage2Fill2.js","components/Filling1050Cage2Fill2.js","components/Timer1125normal.js","components/Filling1125normal.js","components/Timer1200normal.js","components/Filling1200normal.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","class","Button","href","role","Timer","props","useState","Date","fakeCurrentDate","setFakeCurrentDate","setUpGif","image","imageClass","hero","useEffect","setTimeout","currentTimeDate","message","getHours","getMinutes","getSeconds","count","className","src","alt","Filling1050Normal","heroClass","currentUser","boy","format","ticking","timezone","GoalMenu","Timer1050Cage2Fill2","a","console","log","walkingGif","timer","fill","Math","round","Filling1050Cage2Fill2","Timer1125normal","cage","Filling1125Normal","Timer1200normal","App","setCurrentUser","onClick","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afb5c580.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../App.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Home() {\r\n    return(\r\n        <div class=\"home\">\r\n            <div>\r\n                <h1>Production Buddy</h1>\r\n                <Button class=\"btn btn-primary\" href=\"/goalmenu\" role=\"button\">Start</Button>\r\n            </div>\r\n        </div>\r\n        \r\n    ) }\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst Timer = props => {\r\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()) // default value can be anything you want\r\n\r\n  var a = props.hero\r\n\r\n  const setUpGif = \"https://media.giphy.com/media/3ohzdOrcdpiD26TPt6/giphy.gif\"\r\n  const lunchGif = \"https://media.giphy.com/media/KeEnqOWYF7tgE4uPyL/giphy.gif\"\r\n  const breakGif = \"https://media.giphy.com/media/RiWZUGcZPEKdQgrQ96/giphy.gif\"\r\n  const celebrateGif = \"https://media.giphy.com/media/26u4cqiYI30juCOGY/giphy.gif\"\r\n  var walkingGif = \"https://media.giphy.com/media/10h1BGkwYiIydi/giphy.gif\"\r\n  var image = \"\"\r\n  var imageClass = \"\"\r\n\r\n  if (a === true) {\r\n    walkingGif = \"https://media.giphy.com/media/10h1BGkwYiIydi/giphy.gif\"\r\n    imageClass = \"mario\"\r\n  }\r\n  else {\r\n    walkingGif = \"https://i.pinimg.com/originals/55/3a/4a/553a4a6c08af1bdd956b6a32fe0b3a49.gif\"\r\n    imageClass = \"mario\"\r\n  }\r\n\r\n  useEffect(() => {\r\n      setTimeout(() => setFakeCurrentDate(new Date()), 1000)\r\n  }, [fakeCurrentDate])\r\n  var currentTimeDate = new Date()\r\n  var hour = currentTimeDate.getHours()\r\n  var minute = currentTimeDate.getMinutes()\r\n  var seconds = currentTimeDate.getSeconds()\r\n  var timers = hour*60*60 + minute*60 + seconds\r\n  var timer = 36000\r\n  var message = \"\"\r\n  var count = 0\r\n  var cage = 0\r\n  var fill = 0\r\n\r\n  if (timer < 25800) {\r\n    message = \"Setup\"\r\n    count = \"\"\r\n    image = setUpGif\r\n  }\r\n  if (timer > 25800 & timer <= 35400) {\r\n    message = \"Caging\"\r\n    cage = timer - 25800\r\n    count = Math.round(cage / 4.572)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 35400 & timer <= 36000) {\r\n    message = \"Set Up\"\r\n    count = \"\"\r\n    image = setUpGif\r\n  }\r\n  if (timer > 36000 & timer <= 43200) {\r\n    message = \"Filling\"\r\n    fill = timer - 36000\r\n    count = Math.round(fill / 15.3)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 43200 & timer <= 45600) {\r\n    message = \"40 Minute Lunch\"\r\n    count = \"\"\r\n    image = lunchGif\r\n  }\r\n  if (timer > 45600 & timer <= 50400) {\r\n    message = \"Filling\"\r\n    fill = timer - 45600\r\n    count = 465 + Math.round(fill / 15.3)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 50400 & timer <= 51600) {\r\n    message = \"20 Minute Break\"\r\n    count = \"\"\r\n    image = breakGif\r\n  }\r\n  if (timer > 51600 & timer <= 55800) {\r\n    message = \"Filling\"\r\n    fill = timer - 51600\r\n    count = 775 + Math.round(fill / 15.3)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 55800) {\r\n    message = \"Complete!!!\"\r\n    count = \"\"\r\n    image = celebrateGif\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <img className={imageClass} src={image} alt=\"loading...\" />\r\n      <h1>{message}</h1>\r\n      <h1>{count}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer","import Timer from \"./Timer\"\r\nimport Clock from 'react-live-clock';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React from 'react';\r\n\r\nconst Filling1050Normal = props => {\r\n\r\n    \r\n    var heroClass = \"home\"\r\n    var hero = true\r\n\r\n    if (props.currentUser.boy === true) {\r\n        heroClass = \"home\"\r\n        hero = true\r\n    }\r\n    else {\r\n        heroClass = \"princess\"\r\n        hero = false\r\n    }\r\n\r\n    \r\n    \r\n    return(\r\n        <div className={heroClass}>\r\n            <h1>Cage/Fill</h1>\r\n            <Button className=\"btn btn-primary\" href=\"/filling1050-cage2fill2\" role=\"button\">Switch to Cage 2 Fill 2</Button>\r\n            <Timer hero = {hero}/>\r\n            <div>\r\n            <Clock format={'h:mm:ssa'} ticking={true} timezone={'US/Eastern'} />\r\n            </div>\r\n            <Button className=\"btn btn-danger\" href=\"/\" role=\"button\">Home</Button>\r\n          \r\n            \r\n        </div>\r\n        \r\n    ) }\r\nexport default Filling1050Normal","import '../App.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction GoalMenu() {\r\n    return(\r\n        <div class=\"home\">\r\n            <div>\r\n                <h1>Goal</h1>\r\n                <Button class=\"btn btn-primary\" href=\"/filling1050-normal\" role=\"button\">1050</Button>\r\n                <Button class=\"btn btn-primary\" href=\"/filling1125-normal\" role=\"button\">1125</Button>\r\n                <Button class=\"btn btn-primary\" href=\"/filling1200-normal\" role=\"button\">1200</Button>\r\n            </div>\r\n        </div>\r\n        \r\n    ) }\r\n\r\nexport default GoalMenu","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst Timer1050Cage2Fill2 = props => {\r\n\r\n  var a = props.hero\r\n  console.log(a)\r\n\r\n  const setUpGif = \"https://media.giphy.com/media/3ohzdOrcdpiD26TPt6/giphy.gif\"\r\n  const lunchGif = \"https://media.giphy.com/media/KeEnqOWYF7tgE4uPyL/giphy.gif\"\r\n  const breakGif = \"https://media.giphy.com/media/RiWZUGcZPEKdQgrQ96/giphy.gif\"\r\n  const celebrateGif = \"https://media.giphy.com/media/26u4cqiYI30juCOGY/giphy.gif\"\r\n  var walkingGif = \"https://media.giphy.com/media/10h1BGkwYiIydi/giphy.gif\"\r\n  var image = \"\"\r\n  var imageClass = \"\"\r\n\r\n  if (a === true) {\r\n    walkingGif = \"https://media.giphy.com/media/10h1BGkwYiIydi/giphy.gif\"\r\n    imageClass = \"mario\"\r\n  }\r\n  else {\r\n    walkingGif = \"https://i.pinimg.com/originals/55/3a/4a/553a4a6c08af1bdd956b6a32fe0b3a49.gif\"\r\n    imageClass = \"mario\"\r\n  }\r\n\r\n  \r\n\r\n\r\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()) // default value can be anything you want\r\n\r\n  useEffect(() => {\r\n      setTimeout(() => setFakeCurrentDate(new Date()), 1000)\r\n  }, [fakeCurrentDate])\r\n  var currentTimeDate = new Date()\r\n  var hour = currentTimeDate.getHours()\r\n  var minute = currentTimeDate.getMinutes()\r\n  var seconds = currentTimeDate.getSeconds()\r\n  var timer = hour*60*60 + minute*60 + seconds\r\n  var message = \"\"\r\n  var count = 0\r\n  var fill = 0\r\n\r\n\r\n  if (timer < 25800) {\r\n    message = \"Setup\"\r\n    count = \"\"\r\n    image = setUpGif\r\n  }\r\n  if (timer > 25800 & timer <= 43200) {\r\n    message = \"Cage 2 Fill 2\"\r\n    fill = timer - 25800\r\n    count = Math.round(fill / 25.14)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 43200 & timer <= 45600) {\r\n    message = \"40 Minute Lunch\"\r\n    count = \"\"\r\n    image = lunchGif\r\n  }\r\n  if (timer > 45600 & timer <= 50400) {\r\n    message = \"Filling\"\r\n    fill = timer - 45600\r\n    count = 692 + Math.round(fill / 25.14)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 50400 & timer <= 51600) {\r\n    message = \"20 Minute Break\"\r\n    count = \"\"\r\n    image = breakGif\r\n  }\r\n  if (timer > 51600 & timer <= 55800) {\r\n    message = \"Filling\"\r\n    fill = timer - 51600\r\n    count = 883 + Math.round(fill / 25.14)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 55800) {\r\n    message = \"Complete!!!\"\r\n    count = \"\"\r\n    image = celebrateGif\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <img className={imageClass} src={image} alt=\"loading...\" />\r\n      <h1>{message}</h1>\r\n      <h1>{count}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer1050Cage2Fill2","import Timer1050Cage2Fill2 from \"./Timer1050Cage2Fill2\"\r\nimport Clock from 'react-live-clock';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React from 'react';\r\n\r\nconst Filling1050Cage2Fill2 = props => {\r\n    var heroClass = \"home\"\r\n    var hero = true\r\n\r\n    if (props.currentUser.boy === true) {\r\n        heroClass = \"home\"\r\n        hero = true\r\n    }\r\n    else {\r\n        heroClass = \"princess\"\r\n        hero = false\r\n    }\r\n    \r\n    return(\r\n        <div className={heroClass}>\r\n            <h1>Cage 2 Fill 2</h1>\r\n            <Button className=\"btn btn-primary\" href=\"/filling1050-normal\" role=\"button\">Switch to Cage/Fill</Button>\r\n            <Timer1050Cage2Fill2 hero = {hero}/>\r\n            <div>\r\n            <Clock format={'h:mm:ssa'} ticking={true} timezone={'US/Eastern'} />\r\n            </div>\r\n            <Button className=\"btn btn-danger danger\" href=\"/\" role=\"button\">Home</Button>\r\n\r\n            \r\n            \r\n        </div>\r\n        \r\n    ) }\r\nexport default Filling1050Cage2Fill2","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst Timer1125normal = props => {\r\n\r\n  var a = props.hero\r\n\r\n  const setUpGif = \"https://media.giphy.com/media/3ohzdOrcdpiD26TPt6/giphy.gif\"\r\n  const lunchGif = \"https://media.giphy.com/media/KeEnqOWYF7tgE4uPyL/giphy.gif\"\r\n  const breakGif = \"https://media.giphy.com/media/RiWZUGcZPEKdQgrQ96/giphy.gif\"\r\n  const celebrateGif = \"https://media.giphy.com/media/26u4cqiYI30juCOGY/giphy.gif\"\r\n  var walkingGif = \"https://media.giphy.com/media/10h1BGkwYiIydi/giphy.gif\"\r\n  var image = \"\"\r\n  var imageClass = \"\"\r\n\r\n  if (a === true) {\r\n    walkingGif = \"https://media.giphy.com/media/10h1BGkwYiIydi/giphy.gif\"\r\n    imageClass = \"mario\"\r\n  }\r\n  else {\r\n    walkingGif = \"https://i.pinimg.com/originals/55/3a/4a/553a4a6c08af1bdd956b6a32fe0b3a49.gif\"\r\n    imageClass = \"mario\"\r\n  }\r\n\r\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()) // default value can be anything you want\r\n\r\n  useEffect(() => {\r\n      setTimeout(() => setFakeCurrentDate(new Date()), 1000)\r\n  }, [fakeCurrentDate])\r\n  var currentTimeDate = new Date()\r\n  var hour = currentTimeDate.getHours()\r\n  var minute = currentTimeDate.getMinutes()\r\n  var seconds = currentTimeDate.getSeconds()\r\n  var timer = hour*60*60 + minute*60 + seconds\r\n  var message = \"\"\r\n  var count = 0\r\n  var cage = 0\r\n  var fill = 0\r\n\r\n  if (timer < 25800) {\r\n    message = \"Setup\"\r\n    count = \"\"\r\n    image = setUpGif\r\n  }\r\n  if (timer > 25800 & timer <= 35400) {\r\n    message = \"Caging\"\r\n    cage = timer - 25800\r\n    count = Math.round(cage / 4.266)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 35400 & timer <= 36000) {\r\n    message = \"Set Up\"\r\n    count = \"\"\r\n    image = setUpGif\r\n  }\r\n  if (timer > 36000 & timer <= 43200) {\r\n    message = \"Filling\"\r\n    fill = timer - 36000\r\n    count = Math.round(fill / 14.4)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 43200 & timer <= 45600) {\r\n    message = \"40 Minute Lunch\"\r\n    count = \"\"\r\n    image = lunchGif\r\n  }\r\n  if (timer > 45600 & timer <= 50400) {\r\n    message = \"Filling\"\r\n    fill = timer - 45600\r\n    count = 500 + Math.round(fill / 14.4)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 50400 & timer <= 51600) {\r\n    message = \"20 Minute Break\"\r\n    count = \"\"\r\n    image = breakGif\r\n  }\r\n  if (timer > 51600 & timer <= 55800) {\r\n    message = \"Filling\"\r\n    fill = timer - 51600\r\n    count = 833 + Math.round(fill / 14.4)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 55800) {\r\n    message = \"Complete!!!\"\r\n    count = \"\"\r\n    image = celebrateGif\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <img className={imageClass} src={image} alt=\"loading...\" />\r\n      <h1>{message}</h1>\r\n      <h1>{count}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer1125normal","import Timer1125normal from \"./Timer1125normal\"\r\nimport Clock from 'react-live-clock';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React from 'react';\r\n\r\nconst Filling1125Normal = props => {\r\n\r\n    var heroClass = \"home\"\r\n    var hero = true\r\n\r\n    if (props.currentUser.boy === true) {\r\n        heroClass = \"home\"\r\n        hero = true\r\n    }\r\n    else {\r\n        heroClass = \"princess\"\r\n        hero = false\r\n    }\r\n    \r\n    return(\r\n        <div className={heroClass}>\r\n            <h1>Cage/Fill</h1>\r\n            <Timer1125normal hero = {hero}/>\r\n            <div>\r\n            <Clock format={'h:mm:ssa'} ticking={true} timezone={'US/Eastern'} />\r\n            </div>\r\n            <Button className=\"btn btn-danger\" href=\"/\" role=\"button\">Home</Button>\r\n          \r\n            \r\n        </div>\r\n        \r\n    ) }\r\nexport default Filling1125Normal","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst Timer1200normal = props => {\r\n  const [fakeCurrentDate, setFakeCurrentDate] = useState(new Date()) // default value can be anything you want\r\n  \r\n  var a = props.hero\r\n\r\n  const setUpGif = \"https://media.giphy.com/media/3ohzdOrcdpiD26TPt6/giphy.gif\"\r\n  const lunchGif = \"https://media.giphy.com/media/KeEnqOWYF7tgE4uPyL/giphy.gif\"\r\n  const breakGif = \"https://media.giphy.com/media/RiWZUGcZPEKdQgrQ96/giphy.gif\"\r\n  const celebrateGif = \"https://media.giphy.com/media/26u4cqiYI30juCOGY/giphy.gif\"\r\n  var walkingGif = \"https://media.giphy.com/media/10h1BGkwYiIydi/giphy.gif\"\r\n  var image = \"\"\r\n  var imageClass = \"\"\r\n\r\n  if (a === true) {\r\n    walkingGif = \"https://media.giphy.com/media/10h1BGkwYiIydi/giphy.gif\"\r\n    imageClass = \"mario\"\r\n  }\r\n  else {\r\n    walkingGif = \"https://i.pinimg.com/originals/55/3a/4a/553a4a6c08af1bdd956b6a32fe0b3a49.gif\"\r\n    imageClass = \"mario\"\r\n  }\r\n\r\n  useEffect(() => {\r\n      setTimeout(() => setFakeCurrentDate(new Date()), 1000)\r\n  }, [fakeCurrentDate])\r\n  var currentTimeDate = new Date()\r\n  var hour = currentTimeDate.getHours()\r\n  var minute = currentTimeDate.getMinutes()\r\n  var seconds = currentTimeDate.getSeconds()\r\n  var timer = hour*60*60 + minute*60 + seconds\r\n  var message = \"\"\r\n  var count = 0\r\n  var cage = 0\r\n  var fill = 0\r\n\r\n  if (timer < 25800) {\r\n    message = \"Setup\"\r\n    count = \"\"\r\n    image = setUpGif\r\n  }\r\n  if (timer > 25800 & timer <= 35400) {\r\n    message = \"Caging\"\r\n    cage = timer - 25800\r\n    count = Math.round(cage / 4)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 35400 & timer <= 36000) {\r\n    message = \"Set Up\"\r\n    count = \"\"\r\n    image = setUpGif\r\n  }\r\n  if (timer > 36000 & timer <= 43200) {\r\n    message = \"Filling\"\r\n    fill = timer - 36000\r\n    count = Math.round(fill / 13.5)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 43200 & timer <= 45600) {\r\n    message = \"40 Minute Lunch\"\r\n    count = \"\"\r\n    image = lunchGif\r\n  }\r\n  if (timer > 45600 & timer <= 50400) {\r\n    message = \"Filling\"\r\n    fill = timer - 45600\r\n    count = 533 + Math.round(fill / 13.5)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 50400 & timer <= 51600) {\r\n    message = \"20 Minute Break\"\r\n    count = \"\"\r\n    image = breakGif\r\n  }\r\n  if (timer > 51600 & timer <= 55800) {\r\n    message = \"Filling\"\r\n    fill = timer - 51600\r\n    count = 889 + Math.round(fill / 13.5)\r\n    image = walkingGif\r\n  }\r\n  if (timer > 55800) {\r\n    message = \"Complete!!!\"\r\n    count = \"\"\r\n    image = celebrateGif\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <img className={imageClass} src={image} alt=\"loading...\" />\r\n      <h1>{message}</h1>\r\n      <h1>{count}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer1200normal","import Timer1200normal from \"./Timer1200normal\"\r\nimport Clock from 'react-live-clock';\r\nimport Button from 'react-bootstrap/Button';\r\nimport React from 'react';\r\n\r\nconst Filling1125Normal= props => {\r\n\r\n    var heroClass = \"home\"\r\n    var hero = true\r\n\r\n    if (props.currentUser.boy === true) {\r\n        heroClass = \"home\"\r\n        hero = true\r\n    }\r\n    else {\r\n        heroClass = \"princess\"\r\n        hero = false\r\n    }\r\n    \r\n    return(\r\n        <div className={heroClass}>\r\n            <h1>Cage/Fill</h1>\r\n            <Timer1200normal hero = {hero}/>\r\n            <div>\r\n            <Clock format={'h:mm:ssa'} ticking={true} timezone={'US/Eastern'} />\r\n            </div>\r\n            <Button className=\"btn btn-danger\" href=\"/\" role=\"button\">Home</Button>\r\n          \r\n            \r\n        </div>\r\n        \r\n    ) }\r\nexport default Filling1125Normal","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Home from \"./components/Home\"\nimport Filling1050Normal from \"./components/Filling1050Normal\"\nimport GoalMenu from \"./components/GoalMenu\"\nimport Filling1050Cage2Fill2 from \"./components/Filling1050Cage2Fill2\"\nimport Filling1125Normal from \"./components/Filling1125normal\"\nimport Filling1200Normal from \"./components/Filling1200normal\"\n\n\nfunction App() {\n\n\n  const [currentUser, setCurrentUser] = useState({\n    boy: true\n  });\n\n  function change() {\n    if (currentUser.boy === true) {\n      setCurrentUser({boy: false})\n      }\n    else {\n      setCurrentUser({\n        boy: true\n      })\n    }\n  }\n  \n  console.log(currentUser)\n  return (\n    <div className=\"App\">\n      <button onClick={change}></button>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/goalmenu\" component={GoalMenu}/>\n        <Route exact path=\"/filling1050-normal\">\n          <Filling1050Normal currentUser={currentUser}/>\n        </Route>\n        <Route exact path=\"/filling1050-cage2fill2\">\n          <Filling1050Cage2Fill2 currentUser={currentUser}/>\n        </Route>\n        <Route exact path=\"/filling1125-normal\">\n          <Filling1125Normal currentUser={currentUser}/>\n        </Route>\n        <Route exact path=\"/filling1200-normal\">\n        <Filling1200Normal currentUser={currentUser}/>\n        </Route>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}